package com.cdvcloud.douting.service.impl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cdvcloud.douting.common.CommonParameters;
import com.cdvcloud.douting.common.Configuration;
import com.cdvcloud.douting.common.GeneralStatus;
import com.cdvcloud.douting.common.HttpCommonUtil;
import com.cdvcloud.douting.common.ValidateCommonParam;
import com.cdvcloud.douting.domain.QueryBasicObject;
import com.cdvcloud.douting.service.FansTaskProgressAppService;
import com.cdvcloud.rms.util.JSONUtils;
import com.cdvcloud.rms.util.ResponseObject;
import com.cdvcloud.rms.util.StringUtil;
/**
 * 粉丝 积分任务管理
 *
 */
@Service
public class FansTaskProgressAppServiceImpl extends BaseServiceImpl implements FansTaskProgressAppService {

	@Autowired
    private HttpCommonUtil httpCommonUtil;

	/**
	 * 查询粉丝任务详情
	 * @param commonParameters
	 * @param jsonMap
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<Map<String,Object>> queryFansTaskProgress(CommonParameters commonParameters, Map<String, Object> jsonMap) {
		ResponseObject responseObject = new ResponseObject();
		
		jsonMap.put("userType", "fans");
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Map<String, Object> map = new HashMap<String, Object>();
    	map.put(QueryBasicObject.STATUS, 1);
    	jsonMap.put(QueryBasicObject.CONDITIONPARAM, map);
    
        String ip = Configuration.getConfigValue(QueryBasicObject.INTERACTIVEURL);
        String api = Configuration.getConfigValue("queryTaskRulesAll");
        String url = ip + ValidateCommonParam.getCommonParametersUrl(commonParameters, "core") + api;
        String responseString = httpCommonUtil.doPost(url, jsonMap);
        
        List<Map<String,Object>> taskList = new ArrayList<Map<String,Object>>();
        
        if (!StringUtil.isEmpty(responseString)) {
            responseObject = JSONUtils.toObject(responseString, ResponseObject.class);
            if(responseObject.getData()!=null){
            	taskList = (List<Map<String, Object>>) responseObject.getData();
            }
        } else {
            ValidateCommonParam.innerError(responseObject);
        }
        
        api = Configuration.getConfigValue("queryTaskProgress4Page");
        url = ip + ValidateCommonParam.getCommonParametersUrl(commonParameters, "core") + api;
        responseString = httpCommonUtil.doPost(url, jsonMap);
        
        List<Map<String,Object>> taskPgressList = new ArrayList<Map<String,Object>>();
        if (!StringUtil.isEmpty(responseString)) {
            responseObject = JSONUtils.toObject(responseString, ResponseObject.class);
            if(responseObject.getData()!=null){
            	taskPgressList = (List<Map<String, Object>>) responseObject.getData();
            }
        } else {
            ValidateCommonParam.innerError(responseObject);
        }
        
        for (Map<String, Object> mapTask : taskList) {
        	String taskIdent = String.valueOf(mapTask.get("identification"));
        	String type = String.valueOf(mapTask.get("type"));
        	Integer others = (Integer) mapTask.get("others");
        	mapTask.put("receive", "未领取");
        	mapTask.put("status", "未完成");
        	for (Map<String, Object> mapPgress : taskPgressList) {
        		
        		String pIdent = String.valueOf(mapPgress.get("identification"));
        		String time = String.valueOf(mapPgress.get("time"));
        		String status = String.valueOf(mapPgress.get("status"));
        		Integer othersP = (Integer) mapPgress.get("others");
        		
        		if(taskIdent.equals(pIdent)){
        			 if(time.equals(sdf.format(new Date()))){
	        			mapTask.put("receive", status.equals("1")?mapPgress.get("status_zh"):"未领取");
	        			mapTask.put("status", "已完成");
	        			
	        			if(others!=null&&othersP<others){
	        				mapTask.put("status", "未完成");
	        			}
	        			continue;
        			 }else if(type.equals("newbieTask")){
        				mapTask.put("receive", status.equals("1")?mapPgress.get("status_zh"):"未领取");
 	        			mapTask.put("status", "已完成");
 	        			continue;
        			 }
        		}
			}
		}
        
        
        
        
        return taskList;
	}
	/**
	 * 修改粉丝积分
	 * @param commonParameters
	 * @param jsonMap
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@Override
	public ResponseObject updateFansMoneyById(CommonParameters commonParameters, Map<String, Object> param) {
		ResponseObject responseObject = new ResponseObject();
		param.put("userType", "fans");
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String ip = Configuration.getConfigValue(QueryBasicObject.INTERACTIVEURL);
        //验证任务是否完成是否领取
        String api = Configuration.getConfigValue("queryTaskProgressByFansId");
        String url = ip + ValidateCommonParam.getCommonParametersUrl(commonParameters, "core") + api;
        String responseString = httpCommonUtil.doPost(url, param);
        if (!StringUtil.isEmpty(responseString)) {
            responseObject = JSONUtils.toObject(responseString, ResponseObject.class);
            Map<String, Object> taskMap = (Map<String, Object>) responseObject.getData();
            if(taskMap!=null && !taskMap.isEmpty()){
            	String type = String.valueOf(taskMap.get("type"));
            	String status = String.valueOf(taskMap.get("status"));
            	String time = String.valueOf(taskMap.get("time"));
            	if(type.equals("newbieTask")){
            		if(status.equals("1")){
            			responseObject.setCode(GeneralStatus.update_fansMoney_error.status);
                		responseObject.setMessage(GeneralStatus.update_fansMoney_error.detail);
                		responseObject.setData(null);
                		return responseObject;
            		}
            	}else if(!time.equals(sdf.format(new Date()))){
            		responseObject.setCode(GeneralStatus.fans_task_error.status);
            		responseObject.setMessage(GeneralStatus.fans_task_error.detail);
            		responseObject.setData(null);
            		return responseObject;
            	}else if(status.equals("1")){
        			responseObject.setCode(GeneralStatus.update_fansMoney_error.status);
            		responseObject.setMessage(GeneralStatus.update_fansMoney_error.detail);
            		responseObject.setData(null);
            		return responseObject;
        		}
            }
        } else {
            ValidateCommonParam.innerError(responseObject);
        }
        
        //验证通过后更新粉丝积分表
        
        api = Configuration.getConfigValue("updateFansMoneyById");
        url = ip + ValidateCommonParam.getCommonParametersUrl(commonParameters, "core") + api;
        responseString = httpCommonUtil.doPost(url, param);
        if (!StringUtil.isEmpty(responseString)) {
            responseObject = JSONUtils.toObject(responseString, ResponseObject.class);
        } else {
            ValidateCommonParam.innerError(responseObject);
        }
        //修改后修改任务表为已领取
        param.put("status", 1);
        param.put("status_zh", "已领取");
        api = Configuration.getConfigValue("updateTaskProgressStatus");
        url = ip + ValidateCommonParam.getCommonParametersUrl(commonParameters, "core") + api;
        responseString = httpCommonUtil.doPost(url, param);
        if (!StringUtil.isEmpty(responseString)) {
            responseObject = JSONUtils.toObject(responseString, ResponseObject.class);
        
        } else {
            ValidateCommonParam.innerError(responseObject);
        }
        
        
        return responseObject;
	}
	/**
	 * 查询粉丝积分
	 */
	@Override
	public ResponseObject queryFansMoneyById(CommonParameters commonParameters, Map<String, Object> param) {

		ResponseObject responseObject = new ResponseObject();
		param.put("userType", "fans");
        String ip = Configuration.getConfigValue(QueryBasicObject.INTERACTIVEURL);
        String api = Configuration.getConfigValue("queryFansMoneyById");
        String url = ip + ValidateCommonParam.getCommonParametersUrl(commonParameters, "core") + api;
        String responseString = httpCommonUtil.doPost(url, param);
        if (!StringUtil.isEmpty(responseString)) {
            responseObject = JSONUtils.toObject(responseString, ResponseObject.class);
            if(responseObject.getData()==null){
            	 Map<String, Object> data = new HashMap<String, Object>();
            	 data.put("money", 0);
            	 responseObject.setData(data);
            }
        } else {
            ValidateCommonParam.innerError(responseObject);
        }
        
        return responseObject;
	}
	
	 /**
     * 初始化 日常任务详情
     * @param commonParameters
     * @param param
     * @return
     */
	@Override
	public ResponseObject updateTaskProgressByFansId(CommonParameters commonParameters, Map<String, Object> param) {

		ResponseObject responseObject = new ResponseObject();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		param.put("userType", "fans");
		param.put("keyTime", "time");
		param.put("endTime", sdf.format(new Date()));
		Map<String,Object> query = new HashMap<String,Object>();
		query.put("type", "dailyTask");
		query.put("conditionParam", query);
        String ip = Configuration.getConfigValue(QueryBasicObject.INTERACTIVEURL);
        String api = Configuration.getConfigValue("updateTaskProgressByFansId");
        String url = ip + ValidateCommonParam.getCommonParametersUrl(commonParameters, "core") + api;
        String responseString = httpCommonUtil.doPost(url, param);
        if (!StringUtil.isEmpty(responseString)) {
            responseObject = JSONUtils.toObject(responseString, ResponseObject.class);
        } else {
            ValidateCommonParam.innerError(responseObject);
        }
        
        return responseObject;
	}
	
	
}
